<?xml version="1.0" encoding="UTF-8"?>
<b:beans xmlns="http://www.springframework.org/schema/security"
		 xmlns:b="http://www.springframework.org/schema/beans"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<!--
		  one:Extending UsernamePasswordAuthenticationFilter in Spring Security
		  参考：
		  http://mrather.blogspot.jp/2010/02/extending-usernamepasswordauthenticatio.html

		   1. We need to extend UsernamePasswordAuthenticationFilter

		   2. In spring security context, we will be overriding the form login filter FORM_LOGIN_FILTER.
		   <custom-filter position="FORM_LOGIN_FILTER" ref="p2pUsernamePasswordAuthenticationFilter" />

		   3. Since we are using the custom FORM_LOGIN_FILTER, we need to set the following property on <http auto-config="false"

		   4. Another thing to set at <http is entry-point-ref

		   5. Remember the filter 'p2pUsernamePasswordAuthenticationFilter ' we used in in step 2 and extended in step 1, we have to define it.

		   6. In the definition of 'p2pUsernamePasswordAuthenticationFilter' we are identifying the 'authenticationManager', so when you define your authentication manager provide an 'alias' for it:


          two: session 配置


   -->

	<debug />

	<http pattern="/static/**" security="none"/>

	<b:bean id="p2pUsernamePasswordAuthenticationFilter" class="com.sr.p2p.security.P2PUsernamePasswordAuthenticationFilter">
		<b:property name="authenticationManager" ref="authenticationManager"/>
		<b:property name="authenticationFailureHandler" ref="failureHandler"/>
		<b:property name="authenticationSuccessHandler" ref="successHandler"/>
		<b:property name="sessionAuthenticationStrategy" ref="sas" />
	</b:bean>

	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="p2pDetailsService"/>
	</authentication-manager>

	<b:bean id="p2pDetailsService" class="com.sr.p2p.security.P2PUserDetailsService">
		<b:property name="testService" ref="testService2"></b:property>
	</b:bean>

	<b:bean id="testService2" class="com.sr.p2p.service.impl.TestServiceImpl"/>

	<b:bean id="successHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<b:property name="defaultTargetUrl" value="/"/>
	</b:bean>

	<b:bean id="failureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<b:property name="defaultFailureUrl" value="/login.html"/>
	</b:bean>

	<b:bean id="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<b:property name="loginFormUrl" value="/login.html"/>
	</b:bean>

	<b:bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<b:property name="sessionRegistry" ref="sessionRegistry" />
		<b:property name="expiredUrl" value="/session-expired.html" />
	</b:bean>

	<b:bean id="sas" class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
		<b:constructor-arg>
			<b:list>
				<b:bean class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
					<b:constructor-arg ref="sessionRegistry"/>
					<b:property name="maximumSessions" value="1" />
					<b:property name="exceptionIfMaximumExceeded" value="true" />
				</b:bean>
				<b:bean class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy">
				</b:bean>
				<b:bean class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy">
					<b:constructor-arg ref="sessionRegistry"/>
				</b:bean>
			</b:list>
		</b:constructor-arg>
	</b:bean>

	<b:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />



	<http auto-config="false" entry-point-ref="loginUrlAuthenticationEntryPoint">
		<custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
		<custom-filter position="FORM_LOGIN_FILTER" ref="p2pUsernamePasswordAuthenticationFilter" />
		<logout logout-success-url="/loggedout.html" logout-url="/loginout" delete-cookies="JSESSIONID"/>
		<session-management session-authentication-strategy-ref="sas"/>
	</http>

</b:beans>
